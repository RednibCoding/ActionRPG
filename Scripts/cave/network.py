"""
see:
#######################################
# These need some work probably or to be implemented in python
...
#######################################
"""

# Python Stub File for the Cave Engine's NETWORK API
# The code here is available at cave.network. submodule
import cave

from typing import Any, List

#######################################
# These need some work probably or to be implemented in python
list_Package_ = Any # List[cave.Package]
#######################################

class Package:
	def __init__(self, readMode=False): ...

	def writeInt(self, value: int) -> None: ...
	def writeLongInt(self, value: int) -> None: ...
	def writeFloat(self, value: float) -> None: ...
	def writeBool(self, value: bool) -> None: ...
	def writeVector3(self, value: cave.Vector3) -> None: ...
	def writeString(self, value: str) -> None: ...

	def readInt(self) -> int: ...
	def readLongInt(self) -> int: ...
	def readFloat(self) -> float: ...
	def readBool(self) -> bool: ...
	def readVector3(self) -> cave.Vector3: ...
	def readString(self) -> str: ...

	def getNextDataType(self) -> int: ...

class PackageException:
	def __init__(self, message): ...
	def what(self) -> str: ...


# Client Related Class:

class Client:
	def __init__(self, addr="localhost", port=33333): ...

	def isConnected(self) -> bool: ...
	def update(self) -> None: ... # Call this every frame!
	
	def send(self, pkg: Package, reliable=True) -> None: ...
	def popPackages(self) -> list_Package_: ...


# Server Related Classes:

class ServerPeer:
	def send(self, pkg: Package, reliable=True) -> None: ...

class ServerPackage:
	sender  : ServerPeer
	package : Package

class Server:
	def __init__(self, addr="localhost", port=33333): ...

	def update(self) -> None: ... # Call this every frame!
	
	def sendToAll(self, pkg: Package, reliable=True) -> None: ...
	def popPackages(self) -> list_Package_: ...

	def getNumClients(self) -> int: ...